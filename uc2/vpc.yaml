---
  - hosts: all
    become: True
    vars_files:
      - ../key.yaml
    vars:
      aws_access_key: '{{ access_key }}'
      aws_secret_key: '{{ secret_key }}'
      region: "ap-south-1"
      vpc_cidr: 10.192.0.0/16
      vpc_name: "Ansible VPC"
      public_subnet_name: "Ansible Public Subnet"
      public_subnet_cidr: 10.192.10.0/24
      igw_name: "Traffic IGW"
      securitygroup_name: "Ansible Security Group"
      ec2_tag: "WebServer"
      ec2_key_directory: "/home/ansible/roles/aws-vpc/"
      keypair_name: "ec2_key_pair"
    tasks:
      - name: Install bottle python package
        ansible.builtin.pip:
          name: boto3
      - name: Install bottle python package
        ansible.builtin.pip:
          name: boto3
      - name: create VPC
        ec2_vpc_net:
          name: "{{ vpc_name }}"
          cidr_block: "{{ vpc_cidr }}"
          region: "{{ region }}"
          state: present
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
        register: vpc
      - name: associate subnet to the VPC
        ec2_vpc_subnet:
          state: present
          vpc_id: "{{ vpc.vpc.id }}"
          region: "{{ region }}"
          cidr: "{{ public_subnet_cidr }}"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          map_public: yes
          resource_tags:
            Name: "{{ public_subnet_name }}"
        register: public_subnet
      - name: create IGW
        ec2_vpc_igw:
          vpc_id: "{{ vpc.vpc.id }}"
          region: "{{ region }}"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          state: present
          tags:
            Name: "{{ igw_name }}"
        register: igw
      - name: Route IGW
        ec2_vpc_route_table:
          state: present
          vpc_id: "{{ vpc.vpc.id }}"
          region: "{{ region }}"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          subnets:
            - "{{ public_subnet.subnet.id }}"
          routes:
            - dest: 0.0.0.0/0
              gateway_id: "{{ igw.gateway_id  }}"
          tags:
            Name: Public RT
      - name: Create Security Group
        ec2_group:
          name: Ansible_demo_SG
          description: Security Group
          vpc_id: "{{ vpc.vpc.id }}"
          region: "{{ region }}"
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          rules:
            - proto: tcp
              ports:
              - 22
              cidr_ip: 0.0.0.0/0
        register: security_group
      - name: create a new ec2 key pair
        ec2_key:
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
          name: ansible_ec2_keypair
          region: "{{ region }}"
        register: keypair
      - name: Copy EC2 Private Key locally so it can be later on used to SSH into the instance
        copy: content="{{ keypair.key.private_key }}" dest=/home/ec2-user/key.ppk
        when: keypair.changed == true
      - name: Create EC2 server
        ec2:
          image: ami-467ca739
          wait: yes
          instance_type: t2.micro
          region: "{{ region }}"
          group_id: "{{ security_group.group_id }}"
          vpc_subnet_id: "{{ public_subnet.subnet.id }}"
          key_name: "{{ keypair.key.name  }}"
          count_tag:
            Name: apacheserver
          exact_count: 1
          aws_access_key: "{{ aws_access_key }}"
          aws_secret_key: "{{ aws_secret_key }}"
