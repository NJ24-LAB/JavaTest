def buildno = BUILD_NUMBER
pipeline {
    agent any
    tools {
        // Install the Maven version configured as "M3" and add it to the path.
        maven "maven3.6.3"
    }
	
    stages {
      	
       stage('Build'){
             steps{
		    sh "mvn clean package"
	              }
	      
          } 
	   
	  stage('sonar') {
            steps {
		    script {
                       withSonarQubeEnv('SonarQubeSrvr') {
                       sh "mvn sonar:sonar"
                      }
		      timeout(time: 1, unit: 'HOURS') {
                      def qg = waitForQualityGate()
                      if (qg.status != 'OK') {
                           error "Pipeline aborted due to quality gate failure: ${qg.status}"
                      }
                    }
                 }
	      }
           }
		   
	 stage('Dependency Check'){
             steps{
			     dependencyCheck additionalArguments: '', odcInstallation: 'dependency check'
		         dependencyCheckPublisher pattern: ''
	              }
        } 
	
	stage('Building image') {
            steps{
                script {
			  sh "docker build -t yoshithadocker/mydockerrepo:${buildno} ." 
                     }
                  }
              }
	      
	stage('scan'){
             steps{
		    //sh "grype yoshithadocker/mydockerrepo:${buildno}"
			grypeScan autoInstall: false, repName: 'grypeReport_${JOB_NAME}_${BUILD_NUMBER}.txt', scanDest: 'dir:/var/lib/jenkins/workspace/deploy'
              }
        } 
	
	stage('push to repo') {
            steps{
                script {
			  withCredentials([usernamePassword(credentialsId: 'dockerhub', passwordVariable: 'dockerpassword', usernameVariable: 'dockeruser')]) {                        
					sh 'docker login -u yoshithadocker -p ${dockerpassword}'
			                sh "docker push yoshithadocker/mydockerrepo:${buildno}"
                     }
                  }
              }
          }
	  stage('Deploy'){
             steps{
		    sshagent(['tomcat']) {
                   sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/Demo/target/*.war ec2-user@54.178.117.30:/opt/tomcat9/webapps/" 
                  }
              }
        } 
	  
     }

}
